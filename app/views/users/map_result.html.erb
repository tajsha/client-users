<% content_for :header do -%>
    <%= stylesheet_link_tag 'map_result' %>
    <%= stylesheet_link_tag 'ol' %>
    <%= javascript_include_tag 'ol' %>
<% end -%>
<script type="text/javascript">

    function applyMargins() {
        var leftToggler = $(".mini-submenu-left");
        if (leftToggler.is(":visible")) {
            $("#map .ol-zoom")
                    .css("margin-left", 0)
                    .removeClass("zoom-top-opened-sidebar")
                    .addClass("zoom-top-collapsed");
        } else {
            $("#map .ol-zoom")
                    .css("margin-left", $(".sidebar-left").width())
                    .removeClass("zoom-top-opened-sidebar")
                    .removeClass("zoom-top-collapsed");
        }
    }

    function isConstrained() {
        return $(".sidebar").width() == $(window).width();
    }

    function applyInitialUIState() {
        if (isConstrained()) {
            $(".sidebar-left .sidebar-body").fadeOut('slide');
            $('.mini-submenu-left').fadeIn();
        }
    }

    $(function(){
        $('.sidebar-left .slide-submenu').on('click',function() {
            var thisEl = $(this);
            thisEl.closest('.sidebar-body').fadeOut('slide',function(){
                $('.mini-submenu-left').fadeIn();
                applyMargins();
            });
        });

        $('.mini-submenu-left').on('click',function() {
            var thisEl = $(this);
            $('.sidebar-left .sidebar-body').toggle('slide');
            thisEl.hide();
            applyMargins();
        });

        $(window).on("resize", applyMargins);

        var map = new ol.Map({
            target: "map",
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                center: [0, 0],
                zoom: 2
            })
        });
        applyInitialUIState();
        applyMargins();
    });
</script>
<div id="map">
</div>
<div class="row main-row">
  <div class="col-sm-4 col-md-3 sidebar sidebar-left pull-left">
    <form id="map-filters">
        <div class="panel-group sidebar-body" id="accordion-left">
          <div class="panel panel-default">
            <div class="panel-heading">
              <h4 class="panel-title">
                <a data-toggle="collapse" href="#layers">
                  <i class="fa fa-list-alt"></i>
                  Filters
                </a>
                      <span class="pull-right slide-submenu">
                        <i class="fa fa-chevron-left"></i>
                      </span>
              </h4>
            </div>
            <div id="layers" class="panel-collapse collapse in">
              <div class="panel-body list-group">
                <% @countries.each do |country| %>
                 <li class="list-group-item"><input type="checkbox" id='ajax' name="country[]" value="<%= country %>"> <%= country.capitalize %></li>
                <% end %>
              </div>
            </div>
          </div>
        </div>
    </form>
  </div>
</div>
<script>
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(<%=raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
    });
    $("#ajax").on('change', function(){
        console.log('click');
        $.ajax({
            dataType: "json",
            url: '/users/<%= current_user.id%>/map_result',
            data: $('#map-filters').serialize(),
            success: function(json){
                console.log(json);
                handler.buildMap( {provider: {}, internal: {id: 'map'}}, function(){
                    markers = handler.removeMarkers(<%=raw @hash.to_json %>);
                });
                handler.buildMap( {provider: {}, internal: {id: 'map'}}, function(){
                    markers = handler.addMarkers(<%=raw @hash.to_json %>);
                    handler.bounds.extendWith(markers);
                    handler.fitMapToBounds();
                });
            }
        });
    });

</script>